{"ast":null,"code":"/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { DataTexture, FloatType, Math as _Math, RGBFormat, ShaderMaterial, UniformsUtils } from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\nvar GlitchPass = function (dt_size) {\n  Pass.call(this);\n  if (DigitalGlitch === undefined) console.error(\"GlitchPass relies on DigitalGlitch\");\n  var shader = DigitalGlitch;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  if (dt_size == undefined) dt_size = 64;\n  this.uniforms[\"tDisp\"].value = this.generateHeightmap(dt_size);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n  this.fsQuad = new Pass.FullScreenQuad(this.material);\n  this.goWild = false;\n  this.curF = 0;\n  this.generateTrigger();\n};\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n  render: function (renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n    this.uniforms['byp'].value = 0;\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = _Math.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = _Math.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1);\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n    this.curF++;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  generateTrigger: function () {\n    this.randX = _Math.randInt(120, 240);\n  },\n  generateHeightmap: function (dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1);\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  }\n});\nexport { GlitchPass };","map":{"version":3,"names":["DataTexture","FloatType","Math","_Math","RGBFormat","ShaderMaterial","UniformsUtils","Pass","DigitalGlitch","GlitchPass","dt_size","call","undefined","console","error","shader","uniforms","clone","value","generateHeightmap","material","vertexShader","fragmentShader","fsQuad","FullScreenQuad","goWild","curF","generateTrigger","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","texture","random","randX","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","length","i","val","needsUpdate"],"sources":["C:/Users/gary-/Documents/MyProjects/Portfolio/Gary-Liang.github.io/frontend/node_modules/three/examples/jsm/postprocessing/GlitchPass.js"],"sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tDataTexture,\n\tFloatType,\n\tMath as _Math,\n\tRGBFormat,\n\tShaderMaterial,\n\tUniformsUtils\n} from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\n\nvar GlitchPass = function ( dt_size ) {\n\n\tPass.call( this );\n\n\tif ( DigitalGlitch === undefined ) console.error( \"GlitchPass relies on DigitalGlitch\" );\n\n\tvar shader = DigitalGlitch;\n\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\tif ( dt_size == undefined ) dt_size = 64;\n\n\n\tthis.uniforms[ \"tDisp\" ].value = this.generateHeightmap( dt_size );\n\n\n\tthis.material = new ShaderMaterial( {\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\t} );\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n\tthis.goWild = false;\n\tthis.curF = 0;\n\tthis.generateTrigger();\n\n};\n\nGlitchPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: GlitchPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\n\t\tthis.uniforms[ 'byp' ].value = 0;\n\n\t\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\n\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\n\t\t\tthis.uniforms[ 'angle' ].value = _Math.randFloat( - Math.PI, Math.PI );\n\t\t\tthis.uniforms[ 'seed_x' ].value = _Math.randFloat( - 1, 1 );\n\t\t\tthis.uniforms[ 'seed_y' ].value = _Math.randFloat( - 1, 1 );\n\t\t\tthis.uniforms[ 'distortion_x' ].value = _Math.randFloat( 0, 1 );\n\t\t\tthis.uniforms[ 'distortion_y' ].value = _Math.randFloat( 0, 1 );\n\t\t\tthis.curF = 0;\n\t\t\tthis.generateTrigger();\n\n\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\n\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\n\t\t\tthis.uniforms[ 'angle' ].value = _Math.randFloat( - Math.PI, Math.PI );\n\t\t\tthis.uniforms[ 'distortion_x' ].value = _Math.randFloat( 0, 1 );\n\t\t\tthis.uniforms[ 'distortion_y' ].value = _Math.randFloat( 0, 1 );\n\t\t\tthis.uniforms[ 'seed_x' ].value = _Math.randFloat( - 0.3, 0.3 );\n\t\t\tthis.uniforms[ 'seed_y' ].value = _Math.randFloat( - 0.3, 0.3 );\n\n\t\t} else if ( this.goWild == false ) {\n\n\t\t\tthis.uniforms[ 'byp' ].value = 1;\n\n\t\t}\n\n\t\tthis.curF ++;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t},\n\n\tgenerateTrigger: function () {\n\n\t\tthis.randX = _Math.randInt( 120, 240 );\n\n\t},\n\n\tgenerateHeightmap: function ( dt_size ) {\n\n\t\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\n\t\tvar length = dt_size * dt_size;\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar val = _Math.randFloat( 0, 1 );\n\t\t\tdata_arr[ i * 3 + 0 ] = val;\n\t\t\tdata_arr[ i * 3 + 1 ] = val;\n\t\t\tdata_arr[ i * 3 + 2 ] = val;\n\n\t\t}\n\n\t\tvar texture = new DataTexture( data_arr, dt_size, dt_size, RGBFormat, FloatType );\n\t\ttexture.needsUpdate = true;\n\t\treturn texture;\n\n\t}\n\n} );\n\nexport { GlitchPass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}