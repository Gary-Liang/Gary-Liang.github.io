{"ast":null,"code":"/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { ShaderMaterial, UniformsUtils } from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nvar TexturePass = function TexturePass(map, opacity) {\n  Pass.call(this);\n  if (CopyShader === undefined) console.error(\"TexturePass relies on CopyShader\");\n  var shader = CopyShader;\n  this.map = map;\n  this.opacity = opacity !== undefined ? opacity : 1.0;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader,\n    depthTest: false,\n    depthWrite: false\n  });\n  this.needsSwap = false;\n  this.fsQuad = new Pass.FullScreenQuad(null);\n};\nTexturePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: TexturePass,\n  render: function render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.fsQuad.material = this.material;\n    this.uniforms[\"opacity\"].value = this.opacity;\n    this.uniforms[\"tDiffuse\"].value = this.map;\n    this.material.transparent = this.opacity < 1.0;\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear) renderer.clear();\n    this.fsQuad.render(renderer);\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { TexturePass };","map":{"version":3,"names":["ShaderMaterial","UniformsUtils","Pass","CopyShader","TexturePass","map","opacity","call","undefined","console","error","shader","uniforms","clone","material","vertexShader","fragmentShader","depthTest","depthWrite","needsSwap","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","value","transparent","setRenderTarget","renderToScreen","clear"],"sources":["C:/Users/gary-/Documents/MyProjects/Portfolio/Gary-Liang.github.io/frontend/node_modules/three/examples/jsm/postprocessing/TexturePass.js"],"sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tShaderMaterial,\n\tUniformsUtils\n} from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\n\nvar TexturePass = function ( map, opacity ) {\n\n\tPass.call( this );\n\n\tif ( CopyShader === undefined )\n\t\tconsole.error( \"TexturePass relies on CopyShader\" );\n\n\tvar shader = CopyShader;\n\n\tthis.map = map;\n\tthis.opacity = ( opacity !== undefined ) ? opacity : 1.0;\n\n\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tthis.needsSwap = false;\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nTexturePass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: TexturePass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tthis.uniforms[ \"opacity\" ].value = this.opacity;\n\t\tthis.uniforms[ \"tDiffuse\" ].value = this.map;\n\t\tthis.material.transparent = ( this.opacity < 1.0 );\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { TexturePass };\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SACCA,cAAc,EACdC,aAAa,QACP,gCAAgC;AACvC,SAASC,IAAI,QAAQ,2BAA2B;AAChD,SAASC,UAAU,QAAQ,0BAA0B;AAErD,IAAIC,WAAW,GAAG,SAAdA,WAAWA,CAAcC,GAAG,EAAEC,OAAO,EAAG;EAE3CJ,IAAI,CAACK,IAAI,CAAE,IAAK,CAAC;EAEjB,IAAKJ,UAAU,KAAKK,SAAS,EAC5BC,OAAO,CAACC,KAAK,CAAE,kCAAmC,CAAC;EAEpD,IAAIC,MAAM,GAAGR,UAAU;EAEvB,IAAI,CAACE,GAAG,GAAGA,GAAG;EACd,IAAI,CAACC,OAAO,GAAKA,OAAO,KAAKE,SAAS,GAAKF,OAAO,GAAG,GAAG;EAExD,IAAI,CAACM,QAAQ,GAAGX,aAAa,CAACY,KAAK,CAAEF,MAAM,CAACC,QAAS,CAAC;EAEtD,IAAI,CAACE,QAAQ,GAAG,IAAId,cAAc,CAAE;IAEnCY,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBG,YAAY,EAAEJ,MAAM,CAACI,YAAY;IACjCC,cAAc,EAAEL,MAAM,CAACK,cAAc;IACrCC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;EAEH,IAAI,CAACC,SAAS,GAAG,KAAK;EAEtB,IAAI,CAACC,MAAM,GAAG,IAAIlB,IAAI,CAACmB,cAAc,CAAE,IAAK,CAAC;AAE9C,CAAC;AAEDjB,WAAW,CAACkB,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAED,MAAM,CAACE,MAAM,CAAEvB,IAAI,CAACoB,SAAU,CAAC,EAAE;EAEvEI,WAAW,EAAEtB,WAAW;EAExBuB,MAAM,EAAE,SAAAA,OAAWC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,CAAC,8BAA+B;IAEnF,IAAIC,YAAY,GAAGH,QAAQ,CAACI,SAAS;IACrCJ,QAAQ,CAACI,SAAS,GAAG,KAAK;IAE1B,IAAI,CAACZ,MAAM,CAACN,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAEpC,IAAI,CAACF,QAAQ,CAAE,SAAS,CAAE,CAACqB,KAAK,GAAG,IAAI,CAAC3B,OAAO;IAC/C,IAAI,CAACM,QAAQ,CAAE,UAAU,CAAE,CAACqB,KAAK,GAAG,IAAI,CAAC5B,GAAG;IAC5C,IAAI,CAACS,QAAQ,CAACoB,WAAW,GAAK,IAAI,CAAC5B,OAAO,GAAG,GAAK;IAElDsB,QAAQ,CAACO,eAAe,CAAE,IAAI,CAACC,cAAc,GAAG,IAAI,GAAGN,UAAW,CAAC;IACnE,IAAK,IAAI,CAACO,KAAK,EAAGT,QAAQ,CAACS,KAAK,CAAC,CAAC;IAClC,IAAI,CAACjB,MAAM,CAACO,MAAM,CAAEC,QAAS,CAAC;IAE9BA,QAAQ,CAACI,SAAS,GAAGD,YAAY;EAElC;AAED,CAAE,CAAC;AAEH,SAAS3B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}